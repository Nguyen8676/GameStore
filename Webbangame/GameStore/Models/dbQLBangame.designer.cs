#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webbangame.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBANGAME")]
	public partial class dbQLBangameDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGAME(GAME instance);
    partial void UpdateGAME(GAME instance);
    partial void DeleteGAME(GAME instance);
    partial void InsertDON_HANG(DON_HANG instance);
    partial void UpdateDON_HANG(DON_HANG instance);
    partial void DeleteDON_HANG(DON_HANG instance);
    partial void InsertCT_DONHANG(CT_DONHANG instance);
    partial void UpdateCT_DONHANG(CT_DONHANG instance);
    partial void DeleteCT_DONHANG(CT_DONHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHA_PHAT_HANH(NHA_PHAT_HANH instance);
    partial void UpdateNHA_PHAT_HANH(NHA_PHAT_HANH instance);
    partial void DeleteNHA_PHAT_HANH(NHA_PHAT_HANH instance);
    partial void InsertNHA_PHAT_TRIEN(NHA_PHAT_TRIEN instance);
    partial void UpdateNHA_PHAT_TRIEN(NHA_PHAT_TRIEN instance);
    partial void DeleteNHA_PHAT_TRIEN(NHA_PHAT_TRIEN instance);
    partial void InsertTHE_LOAI(THE_LOAI instance);
    partial void UpdateTHE_LOAI(THE_LOAI instance);
    partial void DeleteTHE_LOAI(THE_LOAI instance);
    partial void InsertLIEN_HE(LIEN_HE instance);
    partial void UpdateLIEN_HE(LIEN_HE instance);
    partial void DeleteLIEN_HE(LIEN_HE instance);
    #endregion
		
		public dbQLBangameDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBANGAMEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangameDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangameDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangameDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBangameDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GAME> GAMEs
		{
			get
			{
				return this.GetTable<GAME>();
			}
		}
		
		public System.Data.Linq.Table<DON_HANG> DON_HANGs
		{
			get
			{
				return this.GetTable<DON_HANG>();
			}
		}
		
		public System.Data.Linq.Table<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this.GetTable<CT_DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHA_PHAT_HANH> NHA_PHAT_HANHs
		{
			get
			{
				return this.GetTable<NHA_PHAT_HANH>();
			}
		}
		
		public System.Data.Linq.Table<NHA_PHAT_TRIEN> NHA_PHAT_TRIENs
		{
			get
			{
				return this.GetTable<NHA_PHAT_TRIEN>();
			}
		}
		
		public System.Data.Linq.Table<THE_LOAI> THE_LOAIs
		{
			get
			{
				return this.GetTable<THE_LOAI>();
			}
		}
		
		public System.Data.Linq.Table<LIEN_HE> LIEN_HEs
		{
			get
			{
				return this.GetTable<LIEN_HE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GAME")]
	public partial class GAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGame;
		
		private string _MaTheLoai;
		
		private string _TenGame;
		
		private System.Nullable<double> _GiaBan;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _Anhbia;
		
		private int _MaNPH;
		
		private int _MaNPT;
		
		private string _Mota;
		
		private System.Nullable<int> _Soluongton;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntityRef<NHA_PHAT_HANH> _NHA_PHAT_HANH;
		
		private EntityRef<NHA_PHAT_TRIEN> _NHA_PHAT_TRIEN;
		
		private EntityRef<THE_LOAI> _THE_LOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGameChanging(int value);
    partial void OnMaGameChanged();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenGameChanging(string value);
    partial void OnTenGameChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnMaNPHChanging(int value);
    partial void OnMaNPHChanged();
    partial void OnMaNPTChanging(int value);
    partial void OnMaNPTChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnSoluongtonChanging(System.Nullable<int> value);
    partial void OnSoluongtonChanged();
    #endregion
		
		public GAME()
		{
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._NHA_PHAT_HANH = default(EntityRef<NHA_PHAT_HANH>);
			this._NHA_PHAT_TRIEN = default(EntityRef<NHA_PHAT_TRIEN>);
			this._THE_LOAI = default(EntityRef<THE_LOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGame", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGame
		{
			get
			{
				return this._MaGame;
			}
			set
			{
				if ((this._MaGame != value))
				{
					this.OnMaGameChanging(value);
					this.SendPropertyChanging();
					this._MaGame = value;
					this.SendPropertyChanged("MaGame");
					this.OnMaGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._THE_LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGame", DbType="NVarChar(50)")]
		public string TenGame
		{
			get
			{
				return this._TenGame;
			}
			set
			{
				if ((this._TenGame != value))
				{
					this.OnTenGameChanging(value);
					this.SendPropertyChanging();
					this._TenGame = value;
					this.SendPropertyChanged("TenGame");
					this.OnTenGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="NChar(15)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPH", DbType="Int NOT NULL")]
		public int MaNPH
		{
			get
			{
				return this._MaNPH;
			}
			set
			{
				if ((this._MaNPH != value))
				{
					if (this._NHA_PHAT_HANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNPHChanging(value);
					this.SendPropertyChanging();
					this._MaNPH = value;
					this.SendPropertyChanged("MaNPH");
					this.OnMaNPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPT", DbType="Int NOT NULL")]
		public int MaNPT
		{
			get
			{
				return this._MaNPT;
			}
			set
			{
				if ((this._MaNPT != value))
				{
					if (this._NHA_PHAT_TRIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNPTChanging(value);
					this.SendPropertyChanging();
					this._MaNPT = value;
					this.SendPropertyChanged("MaNPT");
					this.OnMaNPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(3000)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongton", DbType="Int")]
		public System.Nullable<int> Soluongton
		{
			get
			{
				return this._Soluongton;
			}
			set
			{
				if ((this._Soluongton != value))
				{
					this.OnSoluongtonChanging(value);
					this.SendPropertyChanging();
					this._Soluongton = value;
					this.SendPropertyChanged("Soluongton");
					this.OnSoluongtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAME_DON_HANG", Storage="_DON_HANGs", ThisKey="MaGame", OtherKey="MaGame")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAME_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MaGame", OtherKey="MaGame")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHA_PHAT_HANH_GAME", Storage="_NHA_PHAT_HANH", ThisKey="MaNPH", OtherKey="MaNPH", IsForeignKey=true)]
		public NHA_PHAT_HANH NHA_PHAT_HANH
		{
			get
			{
				return this._NHA_PHAT_HANH.Entity;
			}
			set
			{
				NHA_PHAT_HANH previousValue = this._NHA_PHAT_HANH.Entity;
				if (((previousValue != value) 
							|| (this._NHA_PHAT_HANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHA_PHAT_HANH.Entity = null;
						previousValue.GAMEs.Remove(this);
					}
					this._NHA_PHAT_HANH.Entity = value;
					if ((value != null))
					{
						value.GAMEs.Add(this);
						this._MaNPH = value.MaNPH;
					}
					else
					{
						this._MaNPH = default(int);
					}
					this.SendPropertyChanged("NHA_PHAT_HANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHA_PHAT_TRIEN_GAME", Storage="_NHA_PHAT_TRIEN", ThisKey="MaNPT", OtherKey="MaNPT", IsForeignKey=true)]
		public NHA_PHAT_TRIEN NHA_PHAT_TRIEN
		{
			get
			{
				return this._NHA_PHAT_TRIEN.Entity;
			}
			set
			{
				NHA_PHAT_TRIEN previousValue = this._NHA_PHAT_TRIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHA_PHAT_TRIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHA_PHAT_TRIEN.Entity = null;
						previousValue.GAMEs.Remove(this);
					}
					this._NHA_PHAT_TRIEN.Entity = value;
					if ((value != null))
					{
						value.GAMEs.Add(this);
						this._MaNPT = value.MaNPT;
					}
					else
					{
						this._MaNPT = default(int);
					}
					this.SendPropertyChanged("NHA_PHAT_TRIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THE_LOAI_GAME", Storage="_THE_LOAI", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public THE_LOAI THE_LOAI
		{
			get
			{
				return this._THE_LOAI.Entity;
			}
			set
			{
				THE_LOAI previousValue = this._THE_LOAI.Entity;
				if (((previousValue != value) 
							|| (this._THE_LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THE_LOAI.Entity = null;
						previousValue.GAMEs.Remove(this);
					}
					this._THE_LOAI.Entity = value;
					if ((value != null))
					{
						value.GAMEs.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(string);
					}
					this.SendPropertyChanged("THE_LOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.GAME = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.GAME = null;
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.GAME = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.GAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DON_HANG")]
	public partial class DON_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private int _MaGame;
		
		private System.Nullable<bool> _Dathanhtoan;
		
		private System.Nullable<bool> _Tinhtranggiaohang;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntityRef<GAME> _GAME;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnMaGameChanging(int value);
    partial void OnMaGameChanged();
    partial void OnDathanhtoanChanging(System.Nullable<bool> value);
    partial void OnDathanhtoanChanged();
    partial void OnTinhtranggiaohangChanging(System.Nullable<bool> value);
    partial void OnTinhtranggiaohangChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    #endregion
		
		public DON_HANG()
		{
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._GAME = default(EntityRef<GAME>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGame", DbType="Int NOT NULL")]
		public int MaGame
		{
			get
			{
				return this._MaGame;
			}
			set
			{
				if ((this._MaGame != value))
				{
					if (this._GAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGameChanging(value);
					this.SendPropertyChanging();
					this._MaGame = value;
					this.SendPropertyChanged("MaGame");
					this.OnMaGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dathanhtoan", DbType="Bit")]
		public System.Nullable<bool> Dathanhtoan
		{
			get
			{
				return this._Dathanhtoan;
			}
			set
			{
				if ((this._Dathanhtoan != value))
				{
					this.OnDathanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Dathanhtoan = value;
					this.SendPropertyChanged("Dathanhtoan");
					this.OnDathanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtranggiaohang", DbType="Bit")]
		public System.Nullable<bool> Tinhtranggiaohang
		{
			get
			{
				return this._Tinhtranggiaohang;
			}
			set
			{
				if ((this._Tinhtranggiaohang != value))
				{
					this.OnTinhtranggiaohangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtranggiaohang = value;
					this.SendPropertyChanged("Tinhtranggiaohang");
					this.OnTinhtranggiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MaDH", OtherKey="MaGame")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAME_DON_HANG", Storage="_GAME", ThisKey="MaGame", OtherKey="MaGame", IsForeignKey=true)]
		public GAME GAME
		{
			get
			{
				return this._GAME.Entity;
			}
			set
			{
				GAME previousValue = this._GAME.Entity;
				if (((previousValue != value) 
							|| (this._GAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GAME.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._GAME.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._MaGame = value.MaGame;
					}
					else
					{
						this._MaGame = default(int);
					}
					this.SendPropertyChanged("GAME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DON_HANG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DONHANG")]
	public partial class CT_DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaGame;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _Dongia;
		
		private EntityRef<DON_HANG> _DON_HANG;
		
		private EntityRef<GAME> _GAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaGameChanging(int value);
    partial void OnMaGameChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDongiaChanging(System.Nullable<decimal> value);
    partial void OnDongiaChanged();
    #endregion
		
		public CT_DONHANG()
		{
			this._DON_HANG = default(EntityRef<DON_HANG>);
			this._GAME = default(EntityRef<GAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGame
		{
			get
			{
				return this._MaGame;
			}
			set
			{
				if ((this._MaGame != value))
				{
					if ((this._DON_HANG.HasLoadedOrAssignedValue || this._GAME.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGameChanging(value);
					this.SendPropertyChanging();
					this._MaGame = value;
					this.SendPropertyChanged("MaGame");
					this.OnMaGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Money")]
		public System.Nullable<decimal> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CT_DONHANG", Storage="_DON_HANG", ThisKey="MaGame", OtherKey="MaDH", IsForeignKey=true)]
		public DON_HANG DON_HANG
		{
			get
			{
				return this._DON_HANG.Entity;
			}
			set
			{
				DON_HANG previousValue = this._DON_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_HANG.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._DON_HANG.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MaGame = value.MaDH;
					}
					else
					{
						this._MaGame = default(int);
					}
					this.SendPropertyChanged("DON_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GAME_CT_DONHANG", Storage="_GAME", ThisKey="MaGame", OtherKey="MaGame", IsForeignKey=true)]
		public GAME GAME
		{
			get
			{
				return this._GAME.Entity;
			}
			set
			{
				GAME previousValue = this._GAME.Entity;
				if (((previousValue != value) 
							|| (this._GAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GAME.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._GAME.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MaGame = value.MaGame;
					}
					else
					{
						this._MaGame = default(int);
					}
					this.SendPropertyChanged("GAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _DT;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(30)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(50)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(30)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DON_HANG", Storage="_DON_HANGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHA_PHAT_HANH")]
	public partial class NHA_PHAT_HANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNPH;
		
		private string _TenNPH;
		
		private string _DC;
		
		private string _DT;
		
		private EntitySet<GAME> _GAMEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNPHChanging(int value);
    partial void OnMaNPHChanged();
    partial void OnTenNPHChanging(string value);
    partial void OnTenNPHChanged();
    partial void OnDCChanging(string value);
    partial void OnDCChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    #endregion
		
		public NHA_PHAT_HANH()
		{
			this._GAMEs = new EntitySet<GAME>(new Action<GAME>(this.attach_GAMEs), new Action<GAME>(this.detach_GAMEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNPH
		{
			get
			{
				return this._MaNPH;
			}
			set
			{
				if ((this._MaNPH != value))
				{
					this.OnMaNPHChanging(value);
					this.SendPropertyChanging();
					this._MaNPH = value;
					this.SendPropertyChanged("MaNPH");
					this.OnMaNPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNPH", DbType="NVarChar(50)")]
		public string TenNPH
		{
			get
			{
				return this._TenNPH;
			}
			set
			{
				if ((this._TenNPH != value))
				{
					this.OnTenNPHChanging(value);
					this.SendPropertyChanging();
					this._TenNPH = value;
					this.SendPropertyChanged("TenNPH");
					this.OnTenNPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(50)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this.OnDCChanging(value);
					this.SendPropertyChanging();
					this._DC = value;
					this.SendPropertyChanged("DC");
					this.OnDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(50)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHA_PHAT_HANH_GAME", Storage="_GAMEs", ThisKey="MaNPH", OtherKey="MaNPH")]
		public EntitySet<GAME> GAMEs
		{
			get
			{
				return this._GAMEs;
			}
			set
			{
				this._GAMEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.NHA_PHAT_HANH = this;
		}
		
		private void detach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.NHA_PHAT_HANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHA_PHAT_TRIEN")]
	public partial class NHA_PHAT_TRIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNPT;
		
		private string _TenNPT;
		
		private string _DC;
		
		private string _DT;
		
		private EntitySet<GAME> _GAMEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNPTChanging(int value);
    partial void OnMaNPTChanged();
    partial void OnTenNPTChanging(string value);
    partial void OnTenNPTChanged();
    partial void OnDCChanging(string value);
    partial void OnDCChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    #endregion
		
		public NHA_PHAT_TRIEN()
		{
			this._GAMEs = new EntitySet<GAME>(new Action<GAME>(this.attach_GAMEs), new Action<GAME>(this.detach_GAMEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNPT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNPT
		{
			get
			{
				return this._MaNPT;
			}
			set
			{
				if ((this._MaNPT != value))
				{
					this.OnMaNPTChanging(value);
					this.SendPropertyChanging();
					this._MaNPT = value;
					this.SendPropertyChanged("MaNPT");
					this.OnMaNPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNPT", DbType="NVarChar(50)")]
		public string TenNPT
		{
			get
			{
				return this._TenNPT;
			}
			set
			{
				if ((this._TenNPT != value))
				{
					this.OnTenNPTChanging(value);
					this.SendPropertyChanging();
					this._TenNPT = value;
					this.SendPropertyChanged("TenNPT");
					this.OnTenNPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(50)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this.OnDCChanging(value);
					this.SendPropertyChanging();
					this._DC = value;
					this.SendPropertyChanged("DC");
					this.OnDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(50)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHA_PHAT_TRIEN_GAME", Storage="_GAMEs", ThisKey="MaNPT", OtherKey="MaNPT")]
		public EntitySet<GAME> GAMEs
		{
			get
			{
				return this._GAMEs;
			}
			set
			{
				this._GAMEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.NHA_PHAT_TRIEN = this;
		}
		
		private void detach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.NHA_PHAT_TRIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THE_LOAI")]
	public partial class THE_LOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<GAME> _GAMEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public THE_LOAI()
		{
			this._GAMEs = new EntitySet<GAME>(new Action<GAME>(this.attach_GAMEs), new Action<GAME>(this.detach_GAMEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(50)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THE_LOAI_GAME", Storage="_GAMEs", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<GAME> GAMEs
		{
			get
			{
				return this._GAMEs;
			}
			set
			{
				this._GAMEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.THE_LOAI = this;
		}
		
		private void detach_GAMEs(GAME entity)
		{
			this.SendPropertyChanging();
			entity.THE_LOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIEN_HE")]
	public partial class LIEN_HE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SĐT;
		
		private string _DC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSĐTChanging(string value);
    partial void OnSĐTChanged();
    partial void OnDCChanging(string value);
    partial void OnDCChanged();
    #endregion
		
		public LIEN_HE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SĐT", DbType="Char(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SĐT
		{
			get
			{
				return this._SĐT;
			}
			set
			{
				if ((this._SĐT != value))
				{
					this.OnSĐTChanging(value);
					this.SendPropertyChanging();
					this._SĐT = value;
					this.SendPropertyChanged("SĐT");
					this.OnSĐTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(50)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this.OnDCChanging(value);
					this.SendPropertyChanging();
					this._DC = value;
					this.SendPropertyChanged("DC");
					this.OnDCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
